global proc bakeDeformationsToBlendShape(){	$tmp = `ls -sl`;	string $node;	for($node in $tmp)	{		//DUPLICATE NODE AT EACH FRAME OF ANIMATION		//SKIP FIRST FRAME SINCE SELECTED NODE WILL BE FIRST FRAME		float $start = `playbackOptions -q -min`;		float $end = `playbackOptions -q -max`;		string $dupList[];		clear $dupList;		for($i=$start+1;$i<=$end;$i++)		{			currentTime $i;			string $dup[] = `duplicate -rr $node`;			$dupList[size($dupList)] = $dup[0];		}		//GO TO FIRST FRAME/SHAPE		currentTime $start;		//DELETE HISTORY ON SELECTED NODE		delete -ch $node;		//CREATE BLENDSHAPES FROM DUPLICATES		string $blendShape[] = `blendShape $dupList[0] $node`;;		for($d=1;$d<size($dupList);$d++)		{			blendShape -e -t $node $d $dupList[$d] 1 $blendShape[0];		}		//SET KEYFRAMES FOR BLENDSHAPE		int $count = -1;		for($i=$start;$i<=$end;$i++)		{			currentTime $i;			for($d=0;$d<size($dupList);$d++)			{				if($d == $count)				{					setKeyframe -v 1 -at $dupList[$d] -itt "linear" -ott "linear" $blendShape[0];				}				else				{					setKeyframe -v 0 -at $dupList[$d] -itt "linear" -ott "linear" $blendShape[0];				}			}			$count++;		}		//DELETE DUPLICATES		delete $dupList;		print ("-----  FINISHED: "+$node+"  -----\n");	}}